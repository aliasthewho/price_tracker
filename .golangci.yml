# .golangci.yml - Configuration for golangci-lint
# For more options see: https://golangci-lint.run/configuration/

# Set Go version explicitly
run:
  go: '1.22'
  build-tags:
    - integration
  issues-exclude-dirs:
    - "vendor"
    - "internal/mock"
    - "api"
  modules-download-mode: readonly
  timeout: 5m
  issues-exit-code: 1
  fix: true
  output-formats:
    - colored-line-number

linters:
  enable:
    - bodyclose
    - errcheck
    - gocritic
    - gofmt
    - goimports
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - prealloc
    - staticcheck
    - unconvert
    - unused
    - whitespace
  disable-all: false
  fast: false
  presets:
    - bugs
    - unused

linters-settings:
  gocritic:
    # Enable all checks that are tagged with 'performance' and 'style' and don't produce warnings
    enabled-tags:
      - performance
      - style
    disabled-checks:
      - hugeParam  # This check is too opinionated
  govet:
    enable-all: true
    disable:
      - composites # Conflicts with staticcheck
  staticcheck:
    go: '1.22'
    checks: ["all"]

issues:
  exclude-rules:
    # Don't require comments for test helpers
    - path: _test\.go$
      linters:
        - gomnd
        - lll
        - funlen
        - gocritic

  # Maximum issues count per linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0
  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

severity:
  # Default severity for issues. It can be a string: error, warning, info
  default-severity: error

# Linter-specific configuration
linters-settings:
  # Configuration for gocritic
  gocritic:
    enabled-tags:
      - performance
      - style
      - experimental
    disabled-checks:
      - hugeParam  # Disable as it's often not practical
  
  # Configuration for gofmt
  gofmt:
    simplify: true
  
  # Configuration for goimports
  goimports:
    local-prefixes: github.com/aliasthewho/price-tracker
  
  # Configuration for gosec
  gosec:
    excludes:
      - G101  # Potential hardcoded credentials (we'll handle secrets properly)
      - G107  # Potential HTTP request with variable (we validate URLs)

# Issues configuration
issues:
  # Exclude issues reported by linters
  exclude-rules:
    # Exclude some linters from running on tests
    - path: _test\.go
      linters:
        - gosec
        - gocritic
    
    # Exclude common false positives
    - linters:
        - gosec
      text: "G404: "
    
    # Exclude variable names that are too short
    - linters:
        - gocritic
      text: "variable name .+ is too short"

# Output configuration
output:
  # Format of output: "line-number", "json", "colored-line-number", "tab", "checkstyle", "code-climate", "junit-xml", "github-actions"
  format: colored-line-number
  # Print issues count by linter, can be 'always', 'never', 'error' (default 'always')
  print-issued-lines: true
  # Print linter name in the end of issue text (default true)
  print-linter-name: true
